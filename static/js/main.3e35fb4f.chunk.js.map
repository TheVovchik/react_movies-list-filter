{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imdbUrl","imgUrl","description","title","className","src","alt","href","MoviesList","React","memo","movies","map","imdbId","App","useState","query","setQuery","appliedQuery","setAppliedQuery","applyQuery","useCallback","f","delay","timerId","arg","clearTimeout","setTimeout","debounce","visibleMovies","useMemo","moviesFromServer","filter","isQueryInTitle","toLowerCase","includes","trim","isQueryInDescription","htmlFor","type","id","placeholder","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"kuEAQaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,SAI/B,sBAAKC,UAAU,UAAf,UACGF,EACD,uBACA,mBAAGK,KAAMP,EAAT,4BChCGQ,EAAaC,IAAMC,MAAY,gBAAGC,EAAH,EAAGA,OAAH,OAC1C,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAb,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMc,gB,OCKfC,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAASC,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAWMC,EAAaC,sBAvBJ,SAACC,EAChBC,GACA,IAAIC,EAEJ,OAAO,SAACC,GACNC,aAAaF,GACbA,EAAUG,WAAWL,EAAGC,EAAOE,IAiBFG,CAAST,EAAiB,KAAO,IAC1DU,EAAgBC,mBAXG,kBACvBC,EAAiBC,QAAO,SAAAjC,GACtB,IAAMkC,EAAiBlC,EAAMI,MAC1B+B,cAAcC,SAASjB,EAAakB,OAAOF,eACxCG,EAAuBtC,EAAMG,YAChCgC,cAAcC,SAASjB,EAAakB,OAAOF,eAE9C,OAAOD,GAAkBI,OAK3B,CAACN,EAAkBb,IAErB,OACE,sBAAKd,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAOkC,QAAQ,eAAelC,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEmC,KAAK,OACLC,GAAG,eACHpC,UAAU,QACVqC,YAAY,mBACZC,MAAO1B,EACP2B,SAAU,SAACC,GACT3B,EAAS2B,EAAMC,OAAOH,OACtBtB,EAAWwB,EAAMC,OAAOH,iBAOlC,cAAC,EAAD,CAAY/B,OAAQkB,OAGtB,qBAAKzB,UAAU,UAAf,mCC3DN0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3e35fb4f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../react-app-env';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../react-app-env';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList = React.memo<Props>(({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n));\n","import React, { useState, useMemo, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\ntype Func = React.Dispatch<React.SetStateAction<string>>;\n\nconst debounce = (f: Func,\n  delay: number) => {\n  let timerId: NodeJS.Timeout;\n\n  return (arg: string) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(f, delay, arg);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState(query);\n  const getVisibleMovies = () => (\n    moviesFromServer.filter(movie => {\n      const isQueryInTitle = movie.title\n        .toLowerCase().includes(appliedQuery.trim().toLowerCase());\n      const isQueryInDescription = movie.description\n        .toLowerCase().includes(appliedQuery.trim().toLowerCase());\n\n      return isQueryInTitle || isQueryInDescription;\n    }));\n\n  const applyQuery = useCallback(debounce(setAppliedQuery, 1000), []);\n  const visibleMovies = useMemo(getVisibleMovies,\n    [moviesFromServer, appliedQuery]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={query}\n                onChange={(event) => {\n                  setQuery(event.target.value);\n                  applyQuery(event.target.value);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}